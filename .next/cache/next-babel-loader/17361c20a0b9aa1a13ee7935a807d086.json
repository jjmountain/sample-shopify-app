{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jjmountain/code/sample-shopify-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids:[ID!]!) {\\n  nodes(ids: $ids) {\\n    ... on Product {\\n      title\\n      handle\\n      id\\n      images(first: 1) {\\n        edges {\\n          node {\\n            originalSrc\\n            altText\\n          }\\n        }\\n      }\\n      variants(first: 1) {\\n        edges {\\n          node {\\n            price\\n            id\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from \"@shopify/polaris\";\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    children: error.message\n  });\n  console.log('this is data', data);\n  return /*#__PURE__*/_jsx(Card, {\n    children: /*#__PURE__*/_jsx(ResourceList, {\n      showHeader: true,\n      resourceName: {\n        singular: 'Product',\n        plural: 'Products'\n      },\n      items: data.items,\n      renderItem: function renderItem(item) {\n        var media = /*#__PURE__*/_jsx(Thumbnail, {\n          source: item.images.edges[0]\n        });\n      }\n    })\n  });\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/jjmountain/code/sample-shopify-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log","singular","plural","items","item","media","images","edges"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AA4BA,SAASS,WAAT,GAAuB;AAAA;;AAAA,kBAEYR,QAAQ,CAACO,kBAAD,EAAqB;AAAEE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAFpB;AAAA,MAEbC,OAFa,aAEbA,OAFa;AAAA,MAEJC,KAFI,aAEJA,KAFI;AAAA,MAEGC,IAFH,aAEGA,IAFH;;AAIrB,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ,IAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,IAA5B;AAEA,sBACE,KAAC,IAAD;AAAA,2BACE,KAAC,YAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,YAAY,EAAE;AAAEI,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAFhB;AAGE,MAAA,KAAK,EAAEL,IAAI,CAACM,KAHd;AAIE,MAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAClB,YAAMC,KAAK,gBACT,KAAC,SAAD;AACE,UAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB;AAFJ,UADF;AAOD;AAZH;AADF,IADF;AAmBD;;GA3BQhB,W;UAE0BR,Q;;;KAF1BQ,W;AA6BT,eAAeA,WAAf","sourcesContent":["import gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail,\n} from \"@shopify/polaris\";\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids:[ID!]!) {\n  nodes(ids: $ids) {\n    ... on Product {\n      title\n      handle\n      id\n      images(first: 1) {\n        edges {\n          node {\n            originalSrc\n            altText\n          }\n        }\n      }\n      variants(first: 1) {\n        edges {\n          node {\n            price\n            id\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nfunction ProductList() {\n\n  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } })\n\n  if (loading) return <div>Loading...</div>\n  if (error) return <div>{error.message}</div>\n  console.log('this is data', data)\n\n  return(\n    <Card>\n      <ResourceList\n        showHeader\n        resourceName={{ singular: 'Product', plural: 'Products'}}\n        items={data.items}\n        renderItem={item => {\n          const media = (\n            <Thumbnail \n              source={\n                item.images.edges[0]\n              }\n            />\n          )\n        }} \n      \n      />\n    </Card>\n  ) \n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}